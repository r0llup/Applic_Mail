/**
 * DetailsWatcher
 *
 * Copyright (C) 2012 Sh1fT
 *
 * This file is part of Applic_Mail.
 *
 * Applic_Mail is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published
 * by the Free Software Foundation; either version 3 of the License,
 * or (at your option) any later version.
 *
 * Applic_Mail is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Applic_Mail; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307
 * USA
 */

package applic_mail;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Locale;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.Multipart;
import javax.mail.Part;
import javax.swing.JDialog;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 * Manage a {@link DetailsWatcher}
 * @author Sh1fT
 */
public class DetailsWatcher extends JDialog {
    private MailWatcher mailWatcher;
    private Message message;
    private InputStream fileAttachment;
    private String fileNameAttachment;

    /**
     * Create a new {@link DetailsWatcher} instance
     * @param parent
     * @param modal
     * @param message 
     */
    public DetailsWatcher(MailWatcher parent, Boolean modal, Message message) {
        super(parent, modal);
        this.initComponents();
        this.setMailWatcher(parent);
        this.setMessage(message);
        this.setFileAttachment(null);
        this.setFileNameAttachment(null);
        this.feedMessage();
    }

    public MailWatcher getMailWatcher() {
        return this.mailWatcher;
    }

    public void setMailWatcher(MailWatcher mailWatcher) {
        this.mailWatcher = mailWatcher;
    }

    public Message getMessage() {
        return this.message;
    }

    public void setMessage(Message message) {
        this.message = message;
    }

    public InputStream getFileAttachment() {
        return this.fileAttachment;
    }

    public void setFileAttachment(InputStream fileAttachment) {
        this.fileAttachment = fileAttachment;
    }

    public String getFileNameAttachment() {
        return this.fileNameAttachment;
    }

    public void setFileNameAttachment(String fileNameAttachment) {
        this.fileNameAttachment = fileNameAttachment;
    }

    /**
     * Feed the Message
     */
    protected void feedMessage() {
        try {
            DateFormat df = SimpleDateFormat.getDateTimeInstance(
                DateFormat.SHORT, DateFormat.SHORT, Locale.FRENCH);
            this.sentdateLabel.setText(df.format(this.getMessage().getSentDate()));
            this.fromLabel.setText(this.getMessage().getFrom()[0].toString());
            this.objectLabel.setText(this.getMessage().getSubject());
            Multipart mp = (Multipart) this.getMessage().getContent();
            for (int i=0; i < mp.getCount(); i++) {
                Part p = mp.getBodyPart(i);
                String d = p.getDisposition();
                if (p.isMimeType("text/plain") || p.isMimeType("text/html"))
                    this.messageEditorPane.setText(p.getContent().toString());
                if ((d != null) && (d.equalsIgnoreCase(Part.ATTACHMENT))) {
                    this.setFileAttachment(p.getInputStream());
                    this.setFileNameAttachment(p.getFileName());
                    this.attachmentButton.setEnabled(true);
                }
            }
        } catch (MessagingException | IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(),
                "Aïe Aïe Aïe !", JOptionPane.ERROR_MESSAGE);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        sentdateLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        fromLabel = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        objectLabel = new javax.swing.JLabel();
        attachmentButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        messageEditorPane = new javax.swing.JEditorPane();
        jLabel4 = new javax.swing.JLabel();
        formatComboBox = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Applic_Mail - DetailsWatcher");
        setModal(true);
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Détails du message"));

        jLabel1.setText("Date d'émission");

        sentdateLabel.setFont(new java.awt.Font("Tahoma", 2, 11));
        sentdateLabel.setText("aucun");

        jLabel3.setText("De");

        fromLabel.setFont(new java.awt.Font("Tahoma", 2, 11));
        fromLabel.setText("aucun");

        jLabel5.setText("Objet");

        objectLabel.setFont(new java.awt.Font("Tahoma", 2, 11));
        objectLabel.setText("aucun");

        attachmentButton.setText("Enregistrer la pièce-jointe");
        attachmentButton.setEnabled(false);
        attachmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attachmentButtonActionPerformed(evt);
            }
        });

        messageEditorPane.setContentType("text/html");
        messageEditorPane.setEditable(false);
        jScrollPane1.setViewportView(messageEditorPane);

        jLabel4.setText("Format");

        formatComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Texte", "HTML" }));
        formatComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                formatComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(sentdateLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                            .addComponent(fromLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)
                            .addComponent(objectLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 414, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addComponent(attachmentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 243, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(formatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(sentdateLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(fromLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(objectLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attachmentButton)
                    .addComponent(formatComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 168, Short.MAX_VALUE)
                .addContainerGap())
        );

        okButton.setText("Ok");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(238, 238, 238)
                .addComponent(okButton)
                .addContainerGap(255, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(okButton)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void attachmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attachmentButtonActionPerformed
       try {
            JFileChooser jfc = new JFileChooser();
            jfc.setSelectedFile(new File(this.getFileNameAttachment()));
            if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                FileOutputStream fos = new FileOutputStream(jfc.getSelectedFile());
                int c;
                while ((c = this.getFileAttachment().read()) != -1)
                    fos.write(c);
                fos.flush();
                fos.close();
            }
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getLocalizedMessage(),
                "Aïe Aïe Aïe !", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_attachmentButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void formatComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_formatComboBoxActionPerformed
        if (this.formatComboBox.getSelectedItem().toString().compareTo("Texte") == 0)
            this.messageEditorPane.setContentType("text/plain");
        else
            this.messageEditorPane.setContentType("text/html");
    }//GEN-LAST:event_formatComboBoxActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            System.out.println("Error: " + ex.getLocalizedMessage());
            System.exit(1);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                DetailsWatcher dialog = new DetailsWatcher(new MailWatcher(new Applic_Mail(), true), true, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton attachmentButton;
    private javax.swing.JComboBox formatComboBox;
    private javax.swing.JLabel fromLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JEditorPane messageEditorPane;
    private javax.swing.JLabel objectLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel sentdateLabel;
    // End of variables declaration//GEN-END:variables
}